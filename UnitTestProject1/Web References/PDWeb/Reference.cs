//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace UnitTestProject1.PDWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LineServiceSoapBinding", Namespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Vector))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BOException))]
    public partial class LineServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback mainOperationCompleted;
        
        private System.Threading.SendOrPostCallback successOperationCompleted;
        
        private System.Threading.SendOrPostCallback lineOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryOfficeCodesByProjOperationCompleted;
        
        private System.Threading.SendOrPostCallback webNotifyMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCheckedBcOperationCompleted;
        
        private System.Threading.SendOrPostCallback webSetTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkEatOperationCompleted;
        
        private System.Threading.SendOrPostCallback goNextProjOperationCompleted;
        
        private System.Threading.SendOrPostCallback webGetMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertLineInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnCheckedOfficesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNextCheckOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCheckOfficeForFourOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePersonLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePersonLine1OperationCompleted;
        
        private System.Threading.SendOrPostCallback changePersonLine2OperationCompleted;
        
        private System.Threading.SendOrPostCallback forCheckOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOfficeupdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOfficeupd1OperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMsgToTerminalOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePersonLineBcOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPersonMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCusPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendLineMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendAreaLineMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryProjectByOffcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback forGetLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback quick_sortOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertChecklinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback webNotifyMsgByCRMOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePersonLineEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkOfficeTjzOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkOfficeTjz1OperationCompleted;
        
        private System.Threading.SendOrPostCallback changeCurrentLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeCurrentLine1OperationCompleted;
        
        private System.Threading.SendOrPostCallback checkingPersonTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMsgToAreaTerminalOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMsgToPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback unCheckedOfficesToStudyIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback unCheckedOfficesToProjOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFrameCustomerPersonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LineServiceService() {
            this.Url = global::UnitTestProject1.Properties.Settings.Default.UnitTestProject1_PDWeb_LineServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event mainCompletedEventHandler mainCompleted;
        
        /// <remarks/>
        public event successCompletedEventHandler successCompleted;
        
        /// <remarks/>
        public event lineCompletedEventHandler lineCompleted;
        
        /// <remarks/>
        public event queryOfficeCodesByProjCompletedEventHandler queryOfficeCodesByProjCompleted;
        
        /// <remarks/>
        public event webNotifyMsgCompletedEventHandler webNotifyMsgCompleted;
        
        /// <remarks/>
        public event getCheckedBcCompletedEventHandler getCheckedBcCompleted;
        
        /// <remarks/>
        public event webSetTeamCompletedEventHandler webSetTeamCompleted;
        
        /// <remarks/>
        public event checkEatCompletedEventHandler checkEatCompleted;
        
        /// <remarks/>
        public event goNextProjCompletedEventHandler goNextProjCompleted;
        
        /// <remarks/>
        public event webGetMsgCompletedEventHandler webGetMsgCompleted;
        
        /// <remarks/>
        public event insertLineInfoCompletedEventHandler insertLineInfoCompleted;
        
        /// <remarks/>
        public event getUnCheckedOfficesCompletedEventHandler getUnCheckedOfficesCompleted;
        
        /// <remarks/>
        public event getNextCheckOfficeCompletedEventHandler getNextCheckOfficeCompleted;
        
        /// <remarks/>
        public event getCheckOfficeForFourCompletedEventHandler getCheckOfficeForFourCompleted;
        
        /// <remarks/>
        public event changePersonLineCompletedEventHandler changePersonLineCompleted;
        
        /// <remarks/>
        public event changePersonLine1CompletedEventHandler changePersonLine1Completed;
        
        /// <remarks/>
        public event changePersonLine2CompletedEventHandler changePersonLine2Completed;
        
        /// <remarks/>
        public event forCheckOfficeCompletedEventHandler forCheckOfficeCompleted;
        
        /// <remarks/>
        public event CheckOfficeupdCompletedEventHandler CheckOfficeupdCompleted;
        
        /// <remarks/>
        public event CheckOfficeupd1CompletedEventHandler CheckOfficeupd1Completed;
        
        /// <remarks/>
        public event sendMsgToTerminalCompletedEventHandler sendMsgToTerminalCompleted;
        
        /// <remarks/>
        public event changePersonLineBcCompletedEventHandler changePersonLineBcCompleted;
        
        /// <remarks/>
        public event sendPersonMessagesCompletedEventHandler sendPersonMessagesCompleted;
        
        /// <remarks/>
        public event updateCusPersonCompletedEventHandler updateCusPersonCompleted;
        
        /// <remarks/>
        public event sendLineMessagesCompletedEventHandler sendLineMessagesCompleted;
        
        /// <remarks/>
        public event sendAreaLineMessagesCompletedEventHandler sendAreaLineMessagesCompleted;
        
        /// <remarks/>
        public event queryProjectByOffcodeCompletedEventHandler queryProjectByOffcodeCompleted;
        
        /// <remarks/>
        public event forGetLineCompletedEventHandler forGetLineCompleted;
        
        /// <remarks/>
        public event quick_sortCompletedEventHandler quick_sortCompleted;
        
        /// <remarks/>
        public event insertChecklinkCompletedEventHandler insertChecklinkCompleted;
        
        /// <remarks/>
        public event webNotifyMsgByCRMCompletedEventHandler webNotifyMsgByCRMCompleted;
        
        /// <remarks/>
        public event changePersonLineEndCompletedEventHandler changePersonLineEndCompleted;
        
        /// <remarks/>
        public event checkOfficeTjzCompletedEventHandler checkOfficeTjzCompleted;
        
        /// <remarks/>
        public event checkOfficeTjz1CompletedEventHandler checkOfficeTjz1Completed;
        
        /// <remarks/>
        public event changeCurrentLineCompletedEventHandler changeCurrentLineCompleted;
        
        /// <remarks/>
        public event changeCurrentLine1CompletedEventHandler changeCurrentLine1Completed;
        
        /// <remarks/>
        public event checkingPersonTimeCompletedEventHandler checkingPersonTimeCompleted;
        
        /// <remarks/>
        public event sendMsgToAreaTerminalCompletedEventHandler sendMsgToAreaTerminalCompleted;
        
        /// <remarks/>
        public event sendMsgToPersonCompletedEventHandler sendMsgToPersonCompleted;
        
        /// <remarks/>
        public event unCheckedOfficesToStudyIdCompletedEventHandler unCheckedOfficesToStudyIdCompleted;
        
        /// <remarks/>
        public event unCheckedOfficesToProjCompletedEventHandler unCheckedOfficesToProjCompleted;
        
        /// <remarks/>
        public event getFrameCustomerPersonCompletedEventHandler getFrameCustomerPersonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void main(string[] args) {
            this.Invoke("main", new object[] {
                        args});
        }
        
        /// <remarks/>
        public void mainAsync(string[] args) {
            this.mainAsync(args, null);
        }
        
        /// <remarks/>
        public void mainAsync(string[] args, object userState) {
            if ((this.mainOperationCompleted == null)) {
                this.mainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmainOperationCompleted);
            }
            this.InvokeAsync("main", new object[] {
                        args}, this.mainOperationCompleted, userState);
        }
        
        private void OnmainOperationCompleted(object arg) {
            if ((this.mainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void success(string terminalId, string projCode) {
            this.Invoke("success", new object[] {
                        terminalId,
                        projCode});
        }
        
        /// <remarks/>
        public void successAsync(string terminalId, string projCode) {
            this.successAsync(terminalId, projCode, null);
        }
        
        /// <remarks/>
        public void successAsync(string terminalId, string projCode, object userState) {
            if ((this.successOperationCompleted == null)) {
                this.successOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsuccessOperationCompleted);
            }
            this.InvokeAsync("success", new object[] {
                        terminalId,
                        projCode}, this.successOperationCompleted, userState);
        }
        
        private void OnsuccessOperationCompleted(object arg) {
            if ((this.successCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.successCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void line(object[] listFrameLine, string studyID) {
            this.Invoke("line", new object[] {
                        listFrameLine,
                        studyID});
        }
        
        /// <remarks/>
        public void lineAsync(object[] listFrameLine, string studyID) {
            this.lineAsync(listFrameLine, studyID, null);
        }
        
        /// <remarks/>
        public void lineAsync(object[] listFrameLine, string studyID, object userState) {
            if ((this.lineOperationCompleted == null)) {
                this.lineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlineOperationCompleted);
            }
            this.InvokeAsync("line", new object[] {
                        listFrameLine,
                        studyID}, this.lineOperationCompleted, userState);
        }
        
        private void OnlineOperationCompleted(object arg) {
            if ((this.lineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("queryOfficeCodesByProjReturn")]
        public object[] queryOfficeCodesByProj(string ProjectCode, string officeCode, string studyID) {
            object[] results = this.Invoke("queryOfficeCodesByProj", new object[] {
                        ProjectCode,
                        officeCode,
                        studyID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void queryOfficeCodesByProjAsync(string ProjectCode, string officeCode, string studyID) {
            this.queryOfficeCodesByProjAsync(ProjectCode, officeCode, studyID, null);
        }
        
        /// <remarks/>
        public void queryOfficeCodesByProjAsync(string ProjectCode, string officeCode, string studyID, object userState) {
            if ((this.queryOfficeCodesByProjOperationCompleted == null)) {
                this.queryOfficeCodesByProjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryOfficeCodesByProjOperationCompleted);
            }
            this.InvokeAsync("queryOfficeCodesByProj", new object[] {
                        ProjectCode,
                        officeCode,
                        studyID}, this.queryOfficeCodesByProjOperationCompleted, userState);
        }
        
        private void OnqueryOfficeCodesByProjOperationCompleted(object arg) {
            if ((this.queryOfficeCodesByProjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryOfficeCodesByProjCompleted(this, new queryOfficeCodesByProjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("webNotifyMsgReturn")]
        public string webNotifyMsg(long parm, long ksid, string studyID) {
            object[] results = this.Invoke("webNotifyMsg", new object[] {
                        parm,
                        ksid,
                        studyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void webNotifyMsgAsync(long parm, long ksid, string studyID) {
            this.webNotifyMsgAsync(parm, ksid, studyID, null);
        }
        
        /// <remarks/>
        public void webNotifyMsgAsync(long parm, long ksid, string studyID, object userState) {
            if ((this.webNotifyMsgOperationCompleted == null)) {
                this.webNotifyMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwebNotifyMsgOperationCompleted);
            }
            this.InvokeAsync("webNotifyMsg", new object[] {
                        parm,
                        ksid,
                        studyID}, this.webNotifyMsgOperationCompleted, userState);
        }
        
        private void OnwebNotifyMsgOperationCompleted(object arg) {
            if ((this.webNotifyMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.webNotifyMsgCompleted(this, new webNotifyMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCheckedBcReturn")]
        public CheckBc getCheckedBc(string bcCode) {
            object[] results = this.Invoke("getCheckedBc", new object[] {
                        bcCode});
            return ((CheckBc)(results[0]));
        }
        
        /// <remarks/>
        public void getCheckedBcAsync(string bcCode) {
            this.getCheckedBcAsync(bcCode, null);
        }
        
        /// <remarks/>
        public void getCheckedBcAsync(string bcCode, object userState) {
            if ((this.getCheckedBcOperationCompleted == null)) {
                this.getCheckedBcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCheckedBcOperationCompleted);
            }
            this.InvokeAsync("getCheckedBc", new object[] {
                        bcCode}, this.getCheckedBcOperationCompleted, userState);
        }
        
        private void OngetCheckedBcOperationCompleted(object arg) {
            if ((this.getCheckedBcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCheckedBcCompleted(this, new getCheckedBcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("webSetTeamReturn")]
        public string webSetTeam(string studyID, string jcks) {
            object[] results = this.Invoke("webSetTeam", new object[] {
                        studyID,
                        jcks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void webSetTeamAsync(string studyID, string jcks) {
            this.webSetTeamAsync(studyID, jcks, null);
        }
        
        /// <remarks/>
        public void webSetTeamAsync(string studyID, string jcks, object userState) {
            if ((this.webSetTeamOperationCompleted == null)) {
                this.webSetTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwebSetTeamOperationCompleted);
            }
            this.InvokeAsync("webSetTeam", new object[] {
                        studyID,
                        jcks}, this.webSetTeamOperationCompleted, userState);
        }
        
        private void OnwebSetTeamOperationCompleted(object arg) {
            if ((this.webSetTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.webSetTeamCompleted(this, new webSetTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void checkEat(string studyID, object[] listFrameLine) {
            this.Invoke("checkEat", new object[] {
                        studyID,
                        listFrameLine});
        }
        
        /// <remarks/>
        public void checkEatAsync(string studyID, object[] listFrameLine) {
            this.checkEatAsync(studyID, listFrameLine, null);
        }
        
        /// <remarks/>
        public void checkEatAsync(string studyID, object[] listFrameLine, object userState) {
            if ((this.checkEatOperationCompleted == null)) {
                this.checkEatOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckEatOperationCompleted);
            }
            this.InvokeAsync("checkEat", new object[] {
                        studyID,
                        listFrameLine}, this.checkEatOperationCompleted, userState);
        }
        
        private void OncheckEatOperationCompleted(object arg) {
            if ((this.checkEatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkEatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void goNextProj(string studyID, [System.Xml.Serialization.SoapElementAttribute("line")] FrameLine line1) {
            this.Invoke("goNextProj", new object[] {
                        studyID,
                        line1});
        }
        
        /// <remarks/>
        public void goNextProjAsync(string studyID, FrameLine line1) {
            this.goNextProjAsync(studyID, line1, null);
        }
        
        /// <remarks/>
        public void goNextProjAsync(string studyID, FrameLine line1, object userState) {
            if ((this.goNextProjOperationCompleted == null)) {
                this.goNextProjOperationCompleted = new System.Threading.SendOrPostCallback(this.OngoNextProjOperationCompleted);
            }
            this.InvokeAsync("goNextProj", new object[] {
                        studyID,
                        line1}, this.goNextProjOperationCompleted, userState);
        }
        
        private void OngoNextProjOperationCompleted(object arg) {
            if ((this.goNextProjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.goNextProjCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("webGetMsgReturn")]
        public string webGetMsg(string studyID) {
            object[] results = this.Invoke("webGetMsg", new object[] {
                        studyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void webGetMsgAsync(string studyID) {
            this.webGetMsgAsync(studyID, null);
        }
        
        /// <remarks/>
        public void webGetMsgAsync(string studyID, object userState) {
            if ((this.webGetMsgOperationCompleted == null)) {
                this.webGetMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwebGetMsgOperationCompleted);
            }
            this.InvokeAsync("webGetMsg", new object[] {
                        studyID}, this.webGetMsgOperationCompleted, userState);
        }
        
        private void OnwebGetMsgOperationCompleted(object arg) {
            if ((this.webGetMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.webGetMsgCompleted(this, new webGetMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void insertLineInfo([System.Xml.Serialization.SoapElementAttribute("line")] FrameLine line1) {
            this.Invoke("insertLineInfo", new object[] {
                        line1});
        }
        
        /// <remarks/>
        public void insertLineInfoAsync(FrameLine line1) {
            this.insertLineInfoAsync(line1, null);
        }
        
        /// <remarks/>
        public void insertLineInfoAsync(FrameLine line1, object userState) {
            if ((this.insertLineInfoOperationCompleted == null)) {
                this.insertLineInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertLineInfoOperationCompleted);
            }
            this.InvokeAsync("insertLineInfo", new object[] {
                        line1}, this.insertLineInfoOperationCompleted, userState);
        }
        
        private void OninsertLineInfoOperationCompleted(object arg) {
            if ((this.insertLineInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertLineInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUnCheckedOfficesReturn")]
        public object[] getUnCheckedOffices(string studyID) {
            object[] results = this.Invoke("getUnCheckedOffices", new object[] {
                        studyID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getUnCheckedOfficesAsync(string studyID) {
            this.getUnCheckedOfficesAsync(studyID, null);
        }
        
        /// <remarks/>
        public void getUnCheckedOfficesAsync(string studyID, object userState) {
            if ((this.getUnCheckedOfficesOperationCompleted == null)) {
                this.getUnCheckedOfficesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnCheckedOfficesOperationCompleted);
            }
            this.InvokeAsync("getUnCheckedOffices", new object[] {
                        studyID}, this.getUnCheckedOfficesOperationCompleted, userState);
        }
        
        private void OngetUnCheckedOfficesOperationCompleted(object arg) {
            if ((this.getUnCheckedOfficesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnCheckedOfficesCompleted(this, new getUnCheckedOfficesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getNextCheckOfficeReturn")]
        public CheckOffices getNextCheckOffice(string studyID, string officesCode) {
            object[] results = this.Invoke("getNextCheckOffice", new object[] {
                        studyID,
                        officesCode});
            return ((CheckOffices)(results[0]));
        }
        
        /// <remarks/>
        public void getNextCheckOfficeAsync(string studyID, string officesCode) {
            this.getNextCheckOfficeAsync(studyID, officesCode, null);
        }
        
        /// <remarks/>
        public void getNextCheckOfficeAsync(string studyID, string officesCode, object userState) {
            if ((this.getNextCheckOfficeOperationCompleted == null)) {
                this.getNextCheckOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNextCheckOfficeOperationCompleted);
            }
            this.InvokeAsync("getNextCheckOffice", new object[] {
                        studyID,
                        officesCode}, this.getNextCheckOfficeOperationCompleted, userState);
        }
        
        private void OngetNextCheckOfficeOperationCompleted(object arg) {
            if ((this.getNextCheckOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNextCheckOfficeCompleted(this, new getNextCheckOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCheckOfficeForFourReturn")]
        public CheckOffices getCheckOfficeForFour(string studyID, string officeCode) {
            object[] results = this.Invoke("getCheckOfficeForFour", new object[] {
                        studyID,
                        officeCode});
            return ((CheckOffices)(results[0]));
        }
        
        /// <remarks/>
        public void getCheckOfficeForFourAsync(string studyID, string officeCode) {
            this.getCheckOfficeForFourAsync(studyID, officeCode, null);
        }
        
        /// <remarks/>
        public void getCheckOfficeForFourAsync(string studyID, string officeCode, object userState) {
            if ((this.getCheckOfficeForFourOperationCompleted == null)) {
                this.getCheckOfficeForFourOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCheckOfficeForFourOperationCompleted);
            }
            this.InvokeAsync("getCheckOfficeForFour", new object[] {
                        studyID,
                        officeCode}, this.getCheckOfficeForFourOperationCompleted, userState);
        }
        
        private void OngetCheckOfficeForFourOperationCompleted(object arg) {
            if ((this.getCheckOfficeForFourCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCheckOfficeForFourCompleted(this, new getCheckOfficeForFourCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void changePersonLine(string projectCode, int pTime, string personCode, string stats) {
            this.Invoke("changePersonLine", new object[] {
                        projectCode,
                        pTime,
                        personCode,
                        stats});
        }
        
        /// <remarks/>
        public void changePersonLineAsync(string projectCode, int pTime, string personCode, string stats) {
            this.changePersonLineAsync(projectCode, pTime, personCode, stats, null);
        }
        
        /// <remarks/>
        public void changePersonLineAsync(string projectCode, int pTime, string personCode, string stats, object userState) {
            if ((this.changePersonLineOperationCompleted == null)) {
                this.changePersonLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePersonLineOperationCompleted);
            }
            this.InvokeAsync("changePersonLine", new object[] {
                        projectCode,
                        pTime,
                        personCode,
                        stats}, this.changePersonLineOperationCompleted, userState);
        }
        
        private void OnchangePersonLineOperationCompleted(object arg) {
            if ((this.changePersonLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePersonLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="changePersonLine1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void changePersonLine(FrameLineBc fl) {
            this.Invoke("changePersonLine1", new object[] {
                        fl});
        }
        
        /// <remarks/>
        public void changePersonLine1Async(FrameLineBc fl) {
            this.changePersonLine1Async(fl, null);
        }
        
        /// <remarks/>
        public void changePersonLine1Async(FrameLineBc fl, object userState) {
            if ((this.changePersonLine1OperationCompleted == null)) {
                this.changePersonLine1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePersonLine1OperationCompleted);
            }
            this.InvokeAsync("changePersonLine1", new object[] {
                        fl}, this.changePersonLine1OperationCompleted, userState);
        }
        
        private void OnchangePersonLine1OperationCompleted(object arg) {
            if ((this.changePersonLine1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePersonLine1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="changePersonLine2")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void changePersonLine(FrameLine fl) {
            this.Invoke("changePersonLine2", new object[] {
                        fl});
        }
        
        /// <remarks/>
        public void changePersonLine2Async(FrameLine fl) {
            this.changePersonLine2Async(fl, null);
        }
        
        /// <remarks/>
        public void changePersonLine2Async(FrameLine fl, object userState) {
            if ((this.changePersonLine2OperationCompleted == null)) {
                this.changePersonLine2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePersonLine2OperationCompleted);
            }
            this.InvokeAsync("changePersonLine2", new object[] {
                        fl}, this.changePersonLine2OperationCompleted, userState);
        }
        
        private void OnchangePersonLine2OperationCompleted(object arg) {
            if ((this.changePersonLine2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePersonLine2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void forCheckOffice(string studyID) {
            this.Invoke("forCheckOffice", new object[] {
                        studyID});
        }
        
        /// <remarks/>
        public void forCheckOfficeAsync(string studyID) {
            this.forCheckOfficeAsync(studyID, null);
        }
        
        /// <remarks/>
        public void forCheckOfficeAsync(string studyID, object userState) {
            if ((this.forCheckOfficeOperationCompleted == null)) {
                this.forCheckOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforCheckOfficeOperationCompleted);
            }
            this.InvokeAsync("forCheckOffice", new object[] {
                        studyID}, this.forCheckOfficeOperationCompleted, userState);
        }
        
        private void OnforCheckOfficeOperationCompleted(object arg) {
            if ((this.forCheckOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forCheckOfficeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void CheckOfficeupd(string studyID, [System.Xml.Serialization.SoapElementAttribute("line")] FrameLineBc line1, string @string) {
            this.Invoke("CheckOfficeupd", new object[] {
                        studyID,
                        line1,
                        @string});
        }
        
        /// <remarks/>
        public void CheckOfficeupdAsync(string studyID, FrameLineBc line1, string @string) {
            this.CheckOfficeupdAsync(studyID, line1, @string, null);
        }
        
        /// <remarks/>
        public void CheckOfficeupdAsync(string studyID, FrameLineBc line1, string @string, object userState) {
            if ((this.CheckOfficeupdOperationCompleted == null)) {
                this.CheckOfficeupdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOfficeupdOperationCompleted);
            }
            this.InvokeAsync("CheckOfficeupd", new object[] {
                        studyID,
                        line1,
                        @string}, this.CheckOfficeupdOperationCompleted, userState);
        }
        
        private void OnCheckOfficeupdOperationCompleted(object arg) {
            if ((this.CheckOfficeupdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOfficeupdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="CheckOfficeupd1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void CheckOfficeupd(string studyID, [System.Xml.Serialization.SoapElementAttribute("line")] FrameLine line1, string @string) {
            this.Invoke("CheckOfficeupd1", new object[] {
                        studyID,
                        line1,
                        @string});
        }
        
        /// <remarks/>
        public void CheckOfficeupd1Async(string studyID, FrameLine line1, string @string) {
            this.CheckOfficeupd1Async(studyID, line1, @string, null);
        }
        
        /// <remarks/>
        public void CheckOfficeupd1Async(string studyID, FrameLine line1, string @string, object userState) {
            if ((this.CheckOfficeupd1OperationCompleted == null)) {
                this.CheckOfficeupd1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOfficeupd1OperationCompleted);
            }
            this.InvokeAsync("CheckOfficeupd1", new object[] {
                        studyID,
                        line1,
                        @string}, this.CheckOfficeupd1OperationCompleted, userState);
        }
        
        private void OnCheckOfficeupd1OperationCompleted(object arg) {
            if ((this.CheckOfficeupd1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOfficeupd1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void sendMsgToTerminal(string projectCode) {
            this.Invoke("sendMsgToTerminal", new object[] {
                        projectCode});
        }
        
        /// <remarks/>
        public void sendMsgToTerminalAsync(string projectCode) {
            this.sendMsgToTerminalAsync(projectCode, null);
        }
        
        /// <remarks/>
        public void sendMsgToTerminalAsync(string projectCode, object userState) {
            if ((this.sendMsgToTerminalOperationCompleted == null)) {
                this.sendMsgToTerminalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMsgToTerminalOperationCompleted);
            }
            this.InvokeAsync("sendMsgToTerminal", new object[] {
                        projectCode}, this.sendMsgToTerminalOperationCompleted, userState);
        }
        
        private void OnsendMsgToTerminalOperationCompleted(object arg) {
            if ((this.sendMsgToTerminalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMsgToTerminalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void changePersonLineBc(string projectCode, int pTime, string personCode, string stats) {
            this.Invoke("changePersonLineBc", new object[] {
                        projectCode,
                        pTime,
                        personCode,
                        stats});
        }
        
        /// <remarks/>
        public void changePersonLineBcAsync(string projectCode, int pTime, string personCode, string stats) {
            this.changePersonLineBcAsync(projectCode, pTime, personCode, stats, null);
        }
        
        /// <remarks/>
        public void changePersonLineBcAsync(string projectCode, int pTime, string personCode, string stats, object userState) {
            if ((this.changePersonLineBcOperationCompleted == null)) {
                this.changePersonLineBcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePersonLineBcOperationCompleted);
            }
            this.InvokeAsync("changePersonLineBc", new object[] {
                        projectCode,
                        pTime,
                        personCode,
                        stats}, this.changePersonLineBcOperationCompleted, userState);
        }
        
        private void OnchangePersonLineBcOperationCompleted(object arg) {
            if ((this.changePersonLineBcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePersonLineBcCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void sendPersonMessages(int msgType, string personCode, string projectCode, string projectName) {
            this.Invoke("sendPersonMessages", new object[] {
                        msgType,
                        personCode,
                        projectCode,
                        projectName});
        }
        
        /// <remarks/>
        public void sendPersonMessagesAsync(int msgType, string personCode, string projectCode, string projectName) {
            this.sendPersonMessagesAsync(msgType, personCode, projectCode, projectName, null);
        }
        
        /// <remarks/>
        public void sendPersonMessagesAsync(int msgType, string personCode, string projectCode, string projectName, object userState) {
            if ((this.sendPersonMessagesOperationCompleted == null)) {
                this.sendPersonMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPersonMessagesOperationCompleted);
            }
            this.InvokeAsync("sendPersonMessages", new object[] {
                        msgType,
                        personCode,
                        projectCode,
                        projectName}, this.sendPersonMessagesOperationCompleted, userState);
        }
        
        private void OnsendPersonMessagesOperationCompleted(object arg) {
            if ((this.sendPersonMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPersonMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void updateCusPerson(string studyID, string @string) {
            this.Invoke("updateCusPerson", new object[] {
                        studyID,
                        @string});
        }
        
        /// <remarks/>
        public void updateCusPersonAsync(string studyID, string @string) {
            this.updateCusPersonAsync(studyID, @string, null);
        }
        
        /// <remarks/>
        public void updateCusPersonAsync(string studyID, string @string, object userState) {
            if ((this.updateCusPersonOperationCompleted == null)) {
                this.updateCusPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCusPersonOperationCompleted);
            }
            this.InvokeAsync("updateCusPerson", new object[] {
                        studyID,
                        @string}, this.updateCusPersonOperationCompleted, userState);
        }
        
        private void OnupdateCusPersonOperationCompleted(object arg) {
            if ((this.updateCusPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCusPersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void sendLineMessages(string jcks) {
            this.Invoke("sendLineMessages", new object[] {
                        jcks});
        }
        
        /// <remarks/>
        public void sendLineMessagesAsync(string jcks) {
            this.sendLineMessagesAsync(jcks, null);
        }
        
        /// <remarks/>
        public void sendLineMessagesAsync(string jcks, object userState) {
            if ((this.sendLineMessagesOperationCompleted == null)) {
                this.sendLineMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendLineMessagesOperationCompleted);
            }
            this.InvokeAsync("sendLineMessages", new object[] {
                        jcks}, this.sendLineMessagesOperationCompleted, userState);
        }
        
        private void OnsendLineMessagesOperationCompleted(object arg) {
            if ((this.sendLineMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendLineMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void sendAreaLineMessages(string projectCode) {
            this.Invoke("sendAreaLineMessages", new object[] {
                        projectCode});
        }
        
        /// <remarks/>
        public void sendAreaLineMessagesAsync(string projectCode) {
            this.sendAreaLineMessagesAsync(projectCode, null);
        }
        
        /// <remarks/>
        public void sendAreaLineMessagesAsync(string projectCode, object userState) {
            if ((this.sendAreaLineMessagesOperationCompleted == null)) {
                this.sendAreaLineMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendAreaLineMessagesOperationCompleted);
            }
            this.InvokeAsync("sendAreaLineMessages", new object[] {
                        projectCode}, this.sendAreaLineMessagesOperationCompleted, userState);
        }
        
        private void OnsendAreaLineMessagesOperationCompleted(object arg) {
            if ((this.sendAreaLineMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendAreaLineMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("queryProjectByOffcodeReturn")]
        public object[] queryProjectByOffcode(string officesCode, string personCode) {
            object[] results = this.Invoke("queryProjectByOffcode", new object[] {
                        officesCode,
                        personCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void queryProjectByOffcodeAsync(string officesCode, string personCode) {
            this.queryProjectByOffcodeAsync(officesCode, personCode, null);
        }
        
        /// <remarks/>
        public void queryProjectByOffcodeAsync(string officesCode, string personCode, object userState) {
            if ((this.queryProjectByOffcodeOperationCompleted == null)) {
                this.queryProjectByOffcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryProjectByOffcodeOperationCompleted);
            }
            this.InvokeAsync("queryProjectByOffcode", new object[] {
                        officesCode,
                        personCode}, this.queryProjectByOffcodeOperationCompleted, userState);
        }
        
        private void OnqueryProjectByOffcodeOperationCompleted(object arg) {
            if ((this.queryProjectByOffcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryProjectByOffcodeCompleted(this, new queryProjectByOffcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void forGetLine(int vipStatus, FrameLine frameLine, object[] lineList) {
            this.Invoke("forGetLine", new object[] {
                        vipStatus,
                        frameLine,
                        lineList});
        }
        
        /// <remarks/>
        public void forGetLineAsync(int vipStatus, FrameLine frameLine, object[] lineList) {
            this.forGetLineAsync(vipStatus, frameLine, lineList, null);
        }
        
        /// <remarks/>
        public void forGetLineAsync(int vipStatus, FrameLine frameLine, object[] lineList, object userState) {
            if ((this.forGetLineOperationCompleted == null)) {
                this.forGetLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforGetLineOperationCompleted);
            }
            this.InvokeAsync("forGetLine", new object[] {
                        vipStatus,
                        frameLine,
                        lineList}, this.forGetLineOperationCompleted, userState);
        }
        
        private void OnforGetLineOperationCompleted(object arg) {
            if ((this.forGetLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forGetLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("quick_sortReturn")]
        public object[] quick_sort(object[] s, int l, int r) {
            object[] results = this.Invoke("quick_sort", new object[] {
                        s,
                        l,
                        r});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void quick_sortAsync(object[] s, int l, int r) {
            this.quick_sortAsync(s, l, r, null);
        }
        
        /// <remarks/>
        public void quick_sortAsync(object[] s, int l, int r, object userState) {
            if ((this.quick_sortOperationCompleted == null)) {
                this.quick_sortOperationCompleted = new System.Threading.SendOrPostCallback(this.Onquick_sortOperationCompleted);
            }
            this.InvokeAsync("quick_sort", new object[] {
                        s,
                        l,
                        r}, this.quick_sortOperationCompleted, userState);
        }
        
        private void Onquick_sortOperationCompleted(object arg) {
            if ((this.quick_sortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quick_sortCompleted(this, new quick_sortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void insertChecklink(string studyID, string project_code, string office_code, string type) {
            this.Invoke("insertChecklink", new object[] {
                        studyID,
                        project_code,
                        office_code,
                        type});
        }
        
        /// <remarks/>
        public void insertChecklinkAsync(string studyID, string project_code, string office_code, string type) {
            this.insertChecklinkAsync(studyID, project_code, office_code, type, null);
        }
        
        /// <remarks/>
        public void insertChecklinkAsync(string studyID, string project_code, string office_code, string type, object userState) {
            if ((this.insertChecklinkOperationCompleted == null)) {
                this.insertChecklinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertChecklinkOperationCompleted);
            }
            this.InvokeAsync("insertChecklink", new object[] {
                        studyID,
                        project_code,
                        office_code,
                        type}, this.insertChecklinkOperationCompleted, userState);
        }
        
        private void OninsertChecklinkOperationCompleted(object arg) {
            if ((this.insertChecklinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertChecklinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("webNotifyMsgByCRMReturn")]
        public string webNotifyMsgByCRM(long parm, long ksid, string studyID, string json) {
            object[] results = this.Invoke("webNotifyMsgByCRM", new object[] {
                        parm,
                        ksid,
                        studyID,
                        json});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void webNotifyMsgByCRMAsync(long parm, long ksid, string studyID, string json) {
            this.webNotifyMsgByCRMAsync(parm, ksid, studyID, json, null);
        }
        
        /// <remarks/>
        public void webNotifyMsgByCRMAsync(long parm, long ksid, string studyID, string json, object userState) {
            if ((this.webNotifyMsgByCRMOperationCompleted == null)) {
                this.webNotifyMsgByCRMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwebNotifyMsgByCRMOperationCompleted);
            }
            this.InvokeAsync("webNotifyMsgByCRM", new object[] {
                        parm,
                        ksid,
                        studyID,
                        json}, this.webNotifyMsgByCRMOperationCompleted, userState);
        }
        
        private void OnwebNotifyMsgByCRMOperationCompleted(object arg) {
            if ((this.webNotifyMsgByCRMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.webNotifyMsgByCRMCompleted(this, new webNotifyMsgByCRMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void changePersonLineEnd(FrameLine fl) {
            this.Invoke("changePersonLineEnd", new object[] {
                        fl});
        }
        
        /// <remarks/>
        public void changePersonLineEndAsync(FrameLine fl) {
            this.changePersonLineEndAsync(fl, null);
        }
        
        /// <remarks/>
        public void changePersonLineEndAsync(FrameLine fl, object userState) {
            if ((this.changePersonLineEndOperationCompleted == null)) {
                this.changePersonLineEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePersonLineEndOperationCompleted);
            }
            this.InvokeAsync("changePersonLineEnd", new object[] {
                        fl}, this.changePersonLineEndOperationCompleted, userState);
        }
        
        private void OnchangePersonLineEndOperationCompleted(object arg) {
            if ((this.changePersonLineEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePersonLineEndCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void checkOfficeTjz(string studyID, [System.Xml.Serialization.SoapElementAttribute("line")] FrameLine line1) {
            this.Invoke("checkOfficeTjz", new object[] {
                        studyID,
                        line1});
        }
        
        /// <remarks/>
        public void checkOfficeTjzAsync(string studyID, FrameLine line1) {
            this.checkOfficeTjzAsync(studyID, line1, null);
        }
        
        /// <remarks/>
        public void checkOfficeTjzAsync(string studyID, FrameLine line1, object userState) {
            if ((this.checkOfficeTjzOperationCompleted == null)) {
                this.checkOfficeTjzOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckOfficeTjzOperationCompleted);
            }
            this.InvokeAsync("checkOfficeTjz", new object[] {
                        studyID,
                        line1}, this.checkOfficeTjzOperationCompleted, userState);
        }
        
        private void OncheckOfficeTjzOperationCompleted(object arg) {
            if ((this.checkOfficeTjzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkOfficeTjzCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="checkOfficeTjz1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void checkOfficeTjz(string studyID, [System.Xml.Serialization.SoapElementAttribute("line")] FrameLineBc line1) {
            this.Invoke("checkOfficeTjz1", new object[] {
                        studyID,
                        line1});
        }
        
        /// <remarks/>
        public void checkOfficeTjz1Async(string studyID, FrameLineBc line1) {
            this.checkOfficeTjz1Async(studyID, line1, null);
        }
        
        /// <remarks/>
        public void checkOfficeTjz1Async(string studyID, FrameLineBc line1, object userState) {
            if ((this.checkOfficeTjz1OperationCompleted == null)) {
                this.checkOfficeTjz1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckOfficeTjz1OperationCompleted);
            }
            this.InvokeAsync("checkOfficeTjz1", new object[] {
                        studyID,
                        line1}, this.checkOfficeTjz1OperationCompleted, userState);
        }
        
        private void OncheckOfficeTjz1OperationCompleted(object arg) {
            if ((this.checkOfficeTjz1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkOfficeTjz1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void changeCurrentLine(string studyID, string projectCode, string officeCode) {
            this.Invoke("changeCurrentLine", new object[] {
                        studyID,
                        projectCode,
                        officeCode});
        }
        
        /// <remarks/>
        public void changeCurrentLineAsync(string studyID, string projectCode, string officeCode) {
            this.changeCurrentLineAsync(studyID, projectCode, officeCode, null);
        }
        
        /// <remarks/>
        public void changeCurrentLineAsync(string studyID, string projectCode, string officeCode, object userState) {
            if ((this.changeCurrentLineOperationCompleted == null)) {
                this.changeCurrentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeCurrentLineOperationCompleted);
            }
            this.InvokeAsync("changeCurrentLine", new object[] {
                        studyID,
                        projectCode,
                        officeCode}, this.changeCurrentLineOperationCompleted, userState);
        }
        
        private void OnchangeCurrentLineOperationCompleted(object arg) {
            if ((this.changeCurrentLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeCurrentLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="changeCurrentLine1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void changeCurrentLine(string studyID, string officeCode) {
            this.Invoke("changeCurrentLine1", new object[] {
                        studyID,
                        officeCode});
        }
        
        /// <remarks/>
        public void changeCurrentLine1Async(string studyID, string officeCode) {
            this.changeCurrentLine1Async(studyID, officeCode, null);
        }
        
        /// <remarks/>
        public void changeCurrentLine1Async(string studyID, string officeCode, object userState) {
            if ((this.changeCurrentLine1OperationCompleted == null)) {
                this.changeCurrentLine1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeCurrentLine1OperationCompleted);
            }
            this.InvokeAsync("changeCurrentLine1", new object[] {
                        studyID,
                        officeCode}, this.changeCurrentLine1OperationCompleted, userState);
        }
        
        private void OnchangeCurrentLine1OperationCompleted(object arg) {
            if ((this.changeCurrentLine1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeCurrentLine1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void checkingPersonTime(string jcks, FrameLine fl) {
            this.Invoke("checkingPersonTime", new object[] {
                        jcks,
                        fl});
        }
        
        /// <remarks/>
        public void checkingPersonTimeAsync(string jcks, FrameLine fl) {
            this.checkingPersonTimeAsync(jcks, fl, null);
        }
        
        /// <remarks/>
        public void checkingPersonTimeAsync(string jcks, FrameLine fl, object userState) {
            if ((this.checkingPersonTimeOperationCompleted == null)) {
                this.checkingPersonTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckingPersonTimeOperationCompleted);
            }
            this.InvokeAsync("checkingPersonTime", new object[] {
                        jcks,
                        fl}, this.checkingPersonTimeOperationCompleted, userState);
        }
        
        private void OncheckingPersonTimeOperationCompleted(object arg) {
            if ((this.checkingPersonTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkingPersonTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void sendMsgToAreaTerminal(string projectCode) {
            this.Invoke("sendMsgToAreaTerminal", new object[] {
                        projectCode});
        }
        
        /// <remarks/>
        public void sendMsgToAreaTerminalAsync(string projectCode) {
            this.sendMsgToAreaTerminalAsync(projectCode, null);
        }
        
        /// <remarks/>
        public void sendMsgToAreaTerminalAsync(string projectCode, object userState) {
            if ((this.sendMsgToAreaTerminalOperationCompleted == null)) {
                this.sendMsgToAreaTerminalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMsgToAreaTerminalOperationCompleted);
            }
            this.InvokeAsync("sendMsgToAreaTerminal", new object[] {
                        projectCode}, this.sendMsgToAreaTerminalOperationCompleted, userState);
        }
        
        private void OnsendMsgToAreaTerminalOperationCompleted(object arg) {
            if ((this.sendMsgToAreaTerminalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMsgToAreaTerminalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        public void sendMsgToPerson(int msgType, string personCode, string projectCode, string projectName) {
            this.Invoke("sendMsgToPerson", new object[] {
                        msgType,
                        personCode,
                        projectCode,
                        projectName});
        }
        
        /// <remarks/>
        public void sendMsgToPersonAsync(int msgType, string personCode, string projectCode, string projectName) {
            this.sendMsgToPersonAsync(msgType, personCode, projectCode, projectName, null);
        }
        
        /// <remarks/>
        public void sendMsgToPersonAsync(int msgType, string personCode, string projectCode, string projectName, object userState) {
            if ((this.sendMsgToPersonOperationCompleted == null)) {
                this.sendMsgToPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMsgToPersonOperationCompleted);
            }
            this.InvokeAsync("sendMsgToPerson", new object[] {
                        msgType,
                        personCode,
                        projectCode,
                        projectName}, this.sendMsgToPersonOperationCompleted, userState);
        }
        
        private void OnsendMsgToPersonOperationCompleted(object arg) {
            if ((this.sendMsgToPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMsgToPersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("unCheckedOfficesToStudyIdReturn")]
        public object[] unCheckedOfficesToStudyId(string studyID, object[] listCheckOffices) {
            object[] results = this.Invoke("unCheckedOfficesToStudyId", new object[] {
                        studyID,
                        listCheckOffices});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void unCheckedOfficesToStudyIdAsync(string studyID, object[] listCheckOffices) {
            this.unCheckedOfficesToStudyIdAsync(studyID, listCheckOffices, null);
        }
        
        /// <remarks/>
        public void unCheckedOfficesToStudyIdAsync(string studyID, object[] listCheckOffices, object userState) {
            if ((this.unCheckedOfficesToStudyIdOperationCompleted == null)) {
                this.unCheckedOfficesToStudyIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunCheckedOfficesToStudyIdOperationCompleted);
            }
            this.InvokeAsync("unCheckedOfficesToStudyId", new object[] {
                        studyID,
                        listCheckOffices}, this.unCheckedOfficesToStudyIdOperationCompleted, userState);
        }
        
        private void OnunCheckedOfficesToStudyIdOperationCompleted(object arg) {
            if ((this.unCheckedOfficesToStudyIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unCheckedOfficesToStudyIdCompleted(this, new unCheckedOfficesToStudyIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("unCheckedOfficesToProjReturn")]
        public object[] unCheckedOfficesToProj(string studyID, object[] listCheckOffices) {
            object[] results = this.Invoke("unCheckedOfficesToProj", new object[] {
                        studyID,
                        listCheckOffices});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void unCheckedOfficesToProjAsync(string studyID, object[] listCheckOffices) {
            this.unCheckedOfficesToProjAsync(studyID, listCheckOffices, null);
        }
        
        /// <remarks/>
        public void unCheckedOfficesToProjAsync(string studyID, object[] listCheckOffices, object userState) {
            if ((this.unCheckedOfficesToProjOperationCompleted == null)) {
                this.unCheckedOfficesToProjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunCheckedOfficesToProjOperationCompleted);
            }
            this.InvokeAsync("unCheckedOfficesToProj", new object[] {
                        studyID,
                        listCheckOffices}, this.unCheckedOfficesToProjOperationCompleted, userState);
        }
        
        private void OnunCheckedOfficesToProjOperationCompleted(object arg) {
            if ((this.unCheckedOfficesToProjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unCheckedOfficesToProjCompleted(this, new unCheckedOfficesToProjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://service.amlu.tivacs.com", ResponseNamespace="http://192.180.1.143:8060/PowerAppointLine/webservices/LineService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFrameCustomerPersonReturn")]
        public FrameCustomerPerson getFrameCustomerPerson(string studyID) {
            object[] results = this.Invoke("getFrameCustomerPerson", new object[] {
                        studyID});
            return ((FrameCustomerPerson)(results[0]));
        }
        
        /// <remarks/>
        public void getFrameCustomerPersonAsync(string studyID) {
            this.getFrameCustomerPersonAsync(studyID, null);
        }
        
        /// <remarks/>
        public void getFrameCustomerPersonAsync(string studyID, object userState) {
            if ((this.getFrameCustomerPersonOperationCompleted == null)) {
                this.getFrameCustomerPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFrameCustomerPersonOperationCompleted);
            }
            this.InvokeAsync("getFrameCustomerPerson", new object[] {
                        studyID}, this.getFrameCustomerPersonOperationCompleted, userState);
        }
        
        private void OngetFrameCustomerPersonOperationCompleted(object arg) {
            if ((this.getFrameCustomerPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFrameCustomerPersonCompleted(this, new getFrameCustomerPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Vector {
        
        private object[] itemField;
        
        /// <remarks/>
        public object[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://common.pub.tivacs.com")]
    public partial class BOException {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://po.amlu.tivacs.com")]
    public partial class FrameCustomerPerson {
        
        private string appnoField;
        
        private System.Nullable<System.DateTime> checkDateField;
        
        private string cidField;
        
        private string floornoField;
        
        private string identityCardField;
        
        private string maritalStatusField;
        
        private System.Nullable<System.DateTime> operateTimeField;
        
        private string operatorField;
        
        private System.Nullable<System.DateTime> orderDateField;
        
        private System.Nullable<int> orderLineField;
        
        private System.Nullable<int> personAgeField;
        
        private string personCodeField;
        
        private string personNameField;
        
        private string personSexField;
        
        private string phoneField;
        
        private System.Nullable<int> priorityField;
        
        private string statusField;
        
        private string terminalField;
        
        private string xhField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string appno {
            get {
                return this.appnoField;
            }
            set {
                this.appnoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> checkDate {
            get {
                return this.checkDateField;
            }
            set {
                this.checkDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string cid {
            get {
                return this.cidField;
            }
            set {
                this.cidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string floorno {
            get {
                return this.floornoField;
            }
            set {
                this.floornoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string identityCard {
            get {
                return this.identityCardField;
            }
            set {
                this.identityCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string maritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> operateTime {
            get {
                return this.operateTimeField;
            }
            set {
                this.operateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> orderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> orderLine {
            get {
                return this.orderLineField;
            }
            set {
                this.orderLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> personAge {
            get {
                return this.personAgeField;
            }
            set {
                this.personAgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personCode {
            get {
                return this.personCodeField;
            }
            set {
                this.personCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personName {
            get {
                return this.personNameField;
            }
            set {
                this.personNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personSex {
            get {
                return this.personSexField;
            }
            set {
                this.personSexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string terminal {
            get {
                return this.terminalField;
            }
            set {
                this.terminalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string xh {
            get {
                return this.xhField;
            }
            set {
                this.xhField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://po.amlu.tivacs.com")]
    public partial class FrameLineBc {
        
        private System.Nullable<int> callingNextNumField;
        
        private string checkLineLogIdField;
        
        private System.Nullable<System.DateTime> checkTimeField;
        
        private string cidField;
        
        private string eatStatusField;
        
        private System.Nullable<int> jumpField;
        
        private string officesCodeField;
        
        private System.Nullable<int> officesInputOrderField;
        
        private string officesNameField;
        
        private System.Nullable<System.DateTime> operateTimeField;
        
        private string operatorField;
        
        private System.Nullable<int> orderLineField;
        
        private System.Nullable<int> persistTimeField;
        
        private string personCodeField;
        
        private string personNameField;
        
        private string personStatusField;
        
        private string projDisplayOrderField;
        
        private string projectCodeField;
        
        private string projectNameField;
        
        private System.Nullable<int> relineCountField;
        
        private System.Nullable<int> totalTimeField;
        
        private System.Nullable<int> vipStatusField;
        
        private System.Nullable<int> vipStatusProjField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> callingNextNum {
            get {
                return this.callingNextNumField;
            }
            set {
                this.callingNextNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string checkLineLogId {
            get {
                return this.checkLineLogIdField;
            }
            set {
                this.checkLineLogIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> checkTime {
            get {
                return this.checkTimeField;
            }
            set {
                this.checkTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string cid {
            get {
                return this.cidField;
            }
            set {
                this.cidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string eatStatus {
            get {
                return this.eatStatusField;
            }
            set {
                this.eatStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> jump {
            get {
                return this.jumpField;
            }
            set {
                this.jumpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string officesCode {
            get {
                return this.officesCodeField;
            }
            set {
                this.officesCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> officesInputOrder {
            get {
                return this.officesInputOrderField;
            }
            set {
                this.officesInputOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string officesName {
            get {
                return this.officesNameField;
            }
            set {
                this.officesNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> operateTime {
            get {
                return this.operateTimeField;
            }
            set {
                this.operateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> orderLine {
            get {
                return this.orderLineField;
            }
            set {
                this.orderLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> persistTime {
            get {
                return this.persistTimeField;
            }
            set {
                this.persistTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personCode {
            get {
                return this.personCodeField;
            }
            set {
                this.personCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personName {
            get {
                return this.personNameField;
            }
            set {
                this.personNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personStatus {
            get {
                return this.personStatusField;
            }
            set {
                this.personStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projDisplayOrder {
            get {
                return this.projDisplayOrderField;
            }
            set {
                this.projDisplayOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> relineCount {
            get {
                return this.relineCountField;
            }
            set {
                this.relineCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> totalTime {
            get {
                return this.totalTimeField;
            }
            set {
                this.totalTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> vipStatus {
            get {
                return this.vipStatusField;
            }
            set {
                this.vipStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> vipStatusProj {
            get {
                return this.vipStatusProjField;
            }
            set {
                this.vipStatusProjField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://po.amlu.tivacs.com")]
    public partial class CheckOffices {
        
        private System.Nullable<System.DateTime> checkDateField;
        
        private string checkStatusField;
        
        private System.Nullable<System.DateTime> checkingTimeField;
        
        private string cidField;
        
        private string officesCodeField;
        
        private string officesNameField;
        
        private string personCodeField;
        
        private System.Nullable<decimal> totalTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> checkDate {
            get {
                return this.checkDateField;
            }
            set {
                this.checkDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string checkStatus {
            get {
                return this.checkStatusField;
            }
            set {
                this.checkStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> checkingTime {
            get {
                return this.checkingTimeField;
            }
            set {
                this.checkingTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string cid {
            get {
                return this.cidField;
            }
            set {
                this.cidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string officesCode {
            get {
                return this.officesCodeField;
            }
            set {
                this.officesCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string officesName {
            get {
                return this.officesNameField;
            }
            set {
                this.officesNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personCode {
            get {
                return this.personCodeField;
            }
            set {
                this.personCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> totalTime {
            get {
                return this.totalTimeField;
            }
            set {
                this.totalTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://po.amlu.tivacs.com")]
    public partial class FrameLine {
        
        private System.Nullable<int> callingNextNumField;
        
        private string checkLineLogIdField;
        
        private System.Nullable<System.DateTime> checkTimeField;
        
        private string cidField;
        
        private string eatStatusField;
        
        private System.Nullable<int> jumpField;
        
        private string officesCodeField;
        
        private System.Nullable<int> officesInputOrderField;
        
        private string officesNameField;
        
        private System.Nullable<System.DateTime> operateTimeField;
        
        private string operatorField;
        
        private System.Nullable<int> orderLineField;
        
        private System.Nullable<int> persistTimeField;
        
        private string personCodeField;
        
        private string personNameField;
        
        private string personStatusField;
        
        private string projDisplayOrderField;
        
        private string projectCodeField;
        
        private string projectNameField;
        
        private System.Nullable<int> relineCountField;
        
        private System.Nullable<int> totalTimeField;
        
        private System.Nullable<int> vipStatusField;
        
        private System.Nullable<int> vipStatusProjField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> callingNextNum {
            get {
                return this.callingNextNumField;
            }
            set {
                this.callingNextNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string checkLineLogId {
            get {
                return this.checkLineLogIdField;
            }
            set {
                this.checkLineLogIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> checkTime {
            get {
                return this.checkTimeField;
            }
            set {
                this.checkTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string cid {
            get {
                return this.cidField;
            }
            set {
                this.cidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string eatStatus {
            get {
                return this.eatStatusField;
            }
            set {
                this.eatStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> jump {
            get {
                return this.jumpField;
            }
            set {
                this.jumpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string officesCode {
            get {
                return this.officesCodeField;
            }
            set {
                this.officesCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> officesInputOrder {
            get {
                return this.officesInputOrderField;
            }
            set {
                this.officesInputOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string officesName {
            get {
                return this.officesNameField;
            }
            set {
                this.officesNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> operateTime {
            get {
                return this.operateTimeField;
            }
            set {
                this.operateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> orderLine {
            get {
                return this.orderLineField;
            }
            set {
                this.orderLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> persistTime {
            get {
                return this.persistTimeField;
            }
            set {
                this.persistTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personCode {
            get {
                return this.personCodeField;
            }
            set {
                this.personCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personName {
            get {
                return this.personNameField;
            }
            set {
                this.personNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personStatus {
            get {
                return this.personStatusField;
            }
            set {
                this.personStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projDisplayOrder {
            get {
                return this.projDisplayOrderField;
            }
            set {
                this.projDisplayOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> relineCount {
            get {
                return this.relineCountField;
            }
            set {
                this.relineCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> totalTime {
            get {
                return this.totalTimeField;
            }
            set {
                this.totalTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> vipStatus {
            get {
                return this.vipStatusField;
            }
            set {
                this.vipStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> vipStatusProj {
            get {
                return this.vipStatusProjField;
            }
            set {
                this.vipStatusProjField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://po.amlu.tivacs.com")]
    public partial class CheckBc {
        
        private string bcCodeField;
        
        private string bcNameField;
        
        private System.Nullable<System.DateTime> checkDateField;
        
        private string checkStatusField;
        
        private string cidField;
        
        private string personCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string bcCode {
            get {
                return this.bcCodeField;
            }
            set {
                this.bcCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string bcName {
            get {
                return this.bcNameField;
            }
            set {
                this.bcNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> checkDate {
            get {
                return this.checkDateField;
            }
            set {
                this.checkDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string checkStatus {
            get {
                return this.checkStatusField;
            }
            set {
                this.checkStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string cid {
            get {
                return this.cidField;
            }
            set {
                this.cidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string personCode {
            get {
                return this.personCodeField;
            }
            set {
                this.personCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void mainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void successCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void lineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void queryOfficeCodesByProjCompletedEventHandler(object sender, queryOfficeCodesByProjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryOfficeCodesByProjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryOfficeCodesByProjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void webNotifyMsgCompletedEventHandler(object sender, webNotifyMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class webNotifyMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal webNotifyMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getCheckedBcCompletedEventHandler(object sender, getCheckedBcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCheckedBcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCheckedBcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckBc Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckBc)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void webSetTeamCompletedEventHandler(object sender, webSetTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class webSetTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal webSetTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void checkEatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void goNextProjCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void webGetMsgCompletedEventHandler(object sender, webGetMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class webGetMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal webGetMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void insertLineInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getUnCheckedOfficesCompletedEventHandler(object sender, getUnCheckedOfficesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnCheckedOfficesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnCheckedOfficesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getNextCheckOfficeCompletedEventHandler(object sender, getNextCheckOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNextCheckOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNextCheckOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckOffices Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckOffices)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getCheckOfficeForFourCompletedEventHandler(object sender, getCheckOfficeForFourCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCheckOfficeForFourCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCheckOfficeForFourCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckOffices Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckOffices)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void changePersonLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void changePersonLine1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void changePersonLine2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void forCheckOfficeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CheckOfficeupdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CheckOfficeupd1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void sendMsgToTerminalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void changePersonLineBcCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void sendPersonMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void updateCusPersonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void sendLineMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void sendAreaLineMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void queryProjectByOffcodeCompletedEventHandler(object sender, queryProjectByOffcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryProjectByOffcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryProjectByOffcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void forGetLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void quick_sortCompletedEventHandler(object sender, quick_sortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quick_sortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quick_sortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void insertChecklinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void webNotifyMsgByCRMCompletedEventHandler(object sender, webNotifyMsgByCRMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class webNotifyMsgByCRMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal webNotifyMsgByCRMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void changePersonLineEndCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void checkOfficeTjzCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void checkOfficeTjz1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void changeCurrentLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void changeCurrentLine1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void checkingPersonTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void sendMsgToAreaTerminalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void sendMsgToPersonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void unCheckedOfficesToStudyIdCompletedEventHandler(object sender, unCheckedOfficesToStudyIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unCheckedOfficesToStudyIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unCheckedOfficesToStudyIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void unCheckedOfficesToProjCompletedEventHandler(object sender, unCheckedOfficesToProjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unCheckedOfficesToProjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unCheckedOfficesToProjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getFrameCustomerPersonCompletedEventHandler(object sender, getFrameCustomerPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFrameCustomerPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFrameCustomerPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FrameCustomerPerson Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FrameCustomerPerson)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591